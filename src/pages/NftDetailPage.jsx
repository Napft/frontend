import { ethers } from 'ethers';
import { useParams } from 'react-router-dom';
import React, { useState, useEffect } from 'react'
import { AiOutlineHeart, AiFillHeart } from "react-icons/ai";
import { BsEye } from 'react-icons/bs';

import { getContract } from '../Blockchain.Services';
import Header from '../components/Header';
import './NftDetailPage.css'


const Comment = React.memo(({ comment }) => {
  const genRanHex = size => [...Array(size)].map(() => Math.floor(Math.random() * 16).toString(16)).join('');
  const clr = genRanHex(6);
  return (
    <div style={{ margin: "5px", width: "60%", padding: "20px", textAlign: "left", backgroundColor: "#bbb3", color: "white", display: "flex", gap: "30px" }}>
      <div style={{ backgroundColor: `#${clr}30`, color: `#${clr}`, minWidth: "50px", height: "50px", borderRadius: "100px", justifyContent: 'center', alignItems: "center", display: "flex", fontSize: "30px", fontWeight: "bold", userSelect: "none", borderWidth: "2px", borderColor: `#${clr}88` }}>{comment.author_address[2]}</div>
      <div style={{ width: "100%" }}>
        <div style={{ display: "flex", alignItems: "center", justifyContent: "space-between", width: "100%" }}><b style={{ fontSize: "20px", marginRight: "20px" }}>{comment.author_address}</b><span style={{ color: 'gray' }}>{comment.date}</span></div>
        <p>{comment.comment}</p>
      </div>
    </div>
  );
});

const MyChip = React.memo(({ name, data }) => {
  return (<div style={{ fontSize: "17px" }}>
    <h4>{name}</h4>
    <h3 style={{ fontSize: "25px", fontWeight: "bold" }}>{data}</h3>
  </div>);
})



const NftDetailPage = () => {
  const { tokenid } = useParams();
  const dummy_data = {
    // Manual user enter
    title: "NFT Title",
    price_in_eth: 0.001,
    description: "Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quaerat, voluptatibus error. Placeat dolor quibusdam velit, blanditiis vero tempora beatae! Optio ad quod rerum placeat ea eos facere cupiditate, dolorem ab.",

    //Constant initial value 
    likes: 999,
    views: 12345,
    blockchain: "Etherium",
    user_profile_img_url: "https://img.freepik.com/free-icon/user_318-790139.jpg",
    comments: [
      { author_address: "0x1", comment: "Nice....!!!", date: (new Date()).toLocaleDateString('en-US') },
      { author_address: "0x2", comment: "OMG Great.", date: (new Date()).toLocaleDateString('en-US') },
      { author_address: "0x3", comment: "Nice work..!", date: (new Date()).toLocaleDateString('en-US') },
    ],

    //Automatic
    date_of_creation: `${(new Date()).toLocaleDateString('en-US',{year: 'numeric', month: 'short', day: 'numeric' })}`,
    token_id: tokenid, //generated by smart-contract after minting
    owner_public_address: "owner-public-address",
    creator_public_address: "creator-public-address",
    image_url: "", //generated by IPFS Hash
  };
  const [nftDetail, setNftDetail] = useState(dummy_data);
  const [comments, setComments] = useState(dummy_data.comments);
  useEffect(() => {
    async function fetchDetails() {
      const contract = await getContract();
      const NFT = await contract.methods.GetNFTDetails(tokenid).call();
      setNftDetail({
        ...dummy_data,
        owner_public_address: NFT.creator,
        price_in_eth: `${ethers.utils.formatEther(NFT.price)}`,
        image_url: `https://gateway.pinata.cloud/ipfs/${NFT.IpfsHash}`,
        creator_public_address: NFT.creator,
      });
      setComments(dummy_data.comments);
    }
    fetchDetails();
  }, []);

  const [liked, setLiked] = useState(false);
  const [likes, setLikes] = useState(nftDetail.likes);

  const like_function = () => {
    if (liked) {
      setLikes(likes - 1);
    } else {
      setLikes(likes + 1);
    }
    setLiked((preVal) => {
      return !preVal;
    });
  }

  return (
    <div className="gradient-bg-hero" style={{ minHeight: "110vh", }}>
      <div className="">
        <Header />
      </div>

      <center>
        <div style={{ width: "60%" }}>
          <div style={{ margin: "20px", width: "100%", display: "flex", minHeight: "500px", borderRadius: "20px", backgroundColor: "#ddd5" }}>
            <div style={{ height: "inherit", width: "50%", borderRadius: "20px", overflow: "hidden", margin: "10px" }}>
              {
                (nftDetail.image_url.length > 0) ?
                  <img src={nftDetail.image_url} alt="" style={{ height: "100%", width: "100%", objectFit: "cover", userSelect: "none", border: "none" }} onError={({ currentTarget }) => {
                    currentTarget.onerror = null; // prevents looping
                    currentTarget.src = "http://www.lyon-ortho-clinic.com/files/cto_layout/img/placeholder/book.jpg";
                  }} />
                  : <p></p>
              }
            </div>
            <div style={{ height: "100%", width: "50%", margin: "10px", textAlign: "left", padding: "10px", color: "white" }}>
              <div style={{ display: "flex", justifyContent: "space-between", paddingRight: "10px" }}>
                <h1 style={{ fontSize: "40px", fontWeight: "bold" }}>{nftDetail.title}</h1>
                <button className='likeButton' style={{ fontSize: "30px", display: "flex", alignItems: "center", gap: "10px", height: "80%", padding: "2px 15px", borderRadius: "100px" }} onClick={like_function}>{likes}<span>{liked ? <AiFillHeart /> : <AiOutlineHeart />}</span></button>
              </div>
              <hr style={{ borderWidth: "1px", borderColor: "white" }} />
              <br />
              <h3 style={{ fontSize: "30px", fontWeight: "normal", }}>ETH {nftDetail.price_in_eth}</h3>
              <br />
              <div style={{ width: "100%", display: "flex", justifyContent: "space-between", padding: "0px 30px 0px 0px" }}>
                <MyChip name="Blockchain" data={nftDetail.blockchain} />
                <MyChip name="Date created" data={nftDetail.date_of_creation} />
                <MyChip name="Token ID" data={`#${nftDetail.token_id}`} />
                <MyChip name={<span style={{ display: "flex", alignItems: "center", gap: "10px" }}>Views <BsEye /></span>} data={nftDetail.views} />
              </div>
              <br />
              <div style={{ width: "60%", display: "flex", alignItems: "center", justifyContent: "left", gap: "10px" }}>
                <img src={nftDetail.user_profile_img_url} alt="" style={{ width: "45px", height: "45px", borderRadius: "100px", overflow: "hidden", borderWidth: "2px", borderColor: "white", padding: "2px" }} />
                <div style={{ height: "100%", fontSize: "22px", }}>{nftDetail.owner_public_address.slice(0, 15)}...</div>
              </div>
              <br />
              <div style={{ fontSize: "20px" }}>{nftDetail.description}</div>
            </div>
          </div>
          <div>
            {nftDetail.comments.map((val) => <Comment comment={val} />)}
          </div>
        </div>
      </center>
    </div>
  )
}

export default NftDetailPage;